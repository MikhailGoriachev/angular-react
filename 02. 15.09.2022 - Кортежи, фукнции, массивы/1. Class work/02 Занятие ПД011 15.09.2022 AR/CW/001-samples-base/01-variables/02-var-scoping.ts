// Переменные, созданные с использованием ключевого слова var, находятся либо
// в глобальной области видимости либо в локальной области видимости, которая
// представлена функцией.
// При этом переменная доступна до ее фактического определения в коде функции
// и после любого блока {}

function var1() {

    // hoisting - переменные i, var доступны до объявления
    // но их знаения равны undefined
    console.log(i); // undefined
    console.log(test); // undefined

    // переменная i будет доступна и после цикла
    for(var i = 0; i < 10; i ++) {
        var test = i;
    }

    console.log(i); // 10
    console.log(test); // 9
}

var1();


// Повторное определение переменной не приводит к ошибке.
function var2() {
    var a = 10;
    var a = 20;
    console.log(`var2: ${a}`); // 20
}

var2();

// такой цикл выведет на экран 5, 5, 5, 5, 5 вместо ожидаемых 0, 1, 2, 3, 4
// Каждый раз, когда вызывалась функция setTimeout ей передавалась ссылка на одну и ту же
// переменную из области видимости функции var3, поэтому все вызовы setTimeout в итоге
// использовали одно значение
// все 5 запусков setTimeout() выполнятся за время, много меньшее 10 мс
function var3() {
    // поменять на let и посмотреть, что получится :) хинт: 0, 1, 2, 3, 4, 5 - см. следующий пример
    for (var i = 0; i < 5; i++) {
        setTimeout(function() { console.log(`i = ${i}`) }, 10);
    }
}

var3();